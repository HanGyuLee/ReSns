<?xml version="1.0" encoding="UTF-8"?>

<!-- ==== #26. mapper 기본 설정 -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- ==== #27. 루트 엘리먼트 및 네임스페이스 설정하기(이 네임스페이스의 이름은 프로젝트 전체 내에서 반드시 고유해야만 한다.) --> 
<mapper namespace="hglresns">


<!-- 내 게시글 가져오기  -->
	<resultMap type="HashMap" id="boardMap">
		<result property="rno" 		 			 column="rno" 					javaType="String"/>
		<result property="login_name" 		 	 column="login_name" 			javaType="String"/>
		<result property="uimg_profile_filename" column="uimg_profile_filename" javaType="String"/>
		<result property="login_id" 		 	 column="login_id" 				javaType="String"/>
		<result property="title" 		 		 column="title" 				javaType="String"/>
		<result property="board_recnt" 		 	 column="board_recnt" 			javaType="String"/>
		<result property="board_status" 		 column="board_status" 			javaType="String"/>
		<result property="bimg_orgfilename" 	 column="bimg_orgfilename" 		javaType="String"/>
		<result property="bimg_filesize" 		 column="bimg_filesize" 		javaType="String"/>
		<result property="map_we" 		 		 column="map_we" 				javaType="String"/>
		<result property="ma_ky" 		 		 column="ma_ky" 				javaType="String"/>		
	 	<result property="seq_tbl_board" 		 column="seq_tbl_board" 		javaType="String"/>
		<result property="board_content" 		 column="board_content" 		javaType="String"/>
		<result property="board_time" 	 		 column="board_time" 			javaType="String"/>
		<result property="bimg_filename" 		 column="bimg_filename" 		javaType="String"/>
		<result property="map_name" 			 column="map_name" 				javaType="String"/>
		<result property="board_heart" 			 column="board_heart" 			javaType="String"/>	
 	</resultMap>
 	
			
	<select id="myBoardList" parameterType="String" resultMap="boardMap" >		
		
		select rownum as rno , L.login_name as login_name
		      ,M.uimg_profile_filename as uimg_profile_filename
		      ,L.login_id as login_id
		      ,B.seq_tbl_board as seq_tbl_board
		      ,B.board_content as board_content
		      ,case when length(B.board_content) > 10
		              then substr(B.board_content, 1, 10)||'...'
		              else B.board_content
		              end 
		         as title   
		      ,B.board_time as board_time
		      ,B.board_heart as board_heart
		      ,B.board_recnt as board_recnt
		      ,B.board_status as board_status
		      ,I.bimg_filename as bimg_filename
		      ,I.bimg_orgfilename as bimg_orgfilename
		      ,I.bimg_filesize as bimg_filesize
		      ,M.map_we as map_we
		      ,M.map_ky as ma_ky
		      ,M.map_name as map_name
		from tbl_board B join tbl_bimage I
		on B.seq_tbl_board = I.seq_tbl_board
		left outer join tbl_map M
		on B.seq_tbl_board = M.fk_seq_tbl_board 
		join tbl_login L
		on B.fk_login_id = L.login_id
		join tbl_uimage M
		on B.fk_login_id = M.fk_login_id
		where B.fk_login_id =  #{userid}
		
	</select>

<!-- 내 게시글 가져오기 끝 -->	
	
	
	
<!-- 내 페이지에서 프로필사진, 배경사진 가져오기  -->	
	<resultMap type="HashMap" id="profileMap">
	 	<result property="fk_login_id" 			 column="fk_login_id" 			javaType="String"/>
		<result property="uimg_profile_filename" column="uimg_profile_filename" javaType="String"/>
		<result property="uimg_header_filename"  column="uimg_header_filename" 	javaType="String"/>
 	</resultMap>
	
	<select id="myProfile" parameterType="String" resultMap="profileMap" >	
	
		select fk_login_id,uimg_profile_filename,uimg_header_filename
		from tbl_uimage
		where fk_login_id = #{userid}	
			
	</select>
	
<!-- 내 페이지에서 프로필사진, 배경사진 가져오기  끝 -->		
	
	
<!-- 내 페이지에 보여줄 별명 가져오기  -->		
	<select id="userName" parameterType="String" resultType="String">
		    select login_name
		    from tbl_login
		    where login_id = #{userid}	
	</select>
<!-- 내 페이지에 보여줄 별명 가져오기 끝  -->		
	
	
<!-- 내 페이지의 타이틀과 내용이 테이블에 있는지 확인  -->		
	<select id="existTblMypage" parameterType="String" resultType="int" >	
	
		select count(*) as cnt
		from tbl_mypage
		where fk_login_id =  #{userid}
			
	</select>
<!-- 내 페이지의 타이틀과 내용이 테이블에 있는지 확인  끝 -->	
	
	
	
<!-- 내 페이지의 타이틀과 내용 가져오기 -->	
	<resultMap type="HashMap" id="mypageMap">
		<result property="textinput" 		column="textinput"  	javaType="String"/>
		<result property="textarea" 		column="textarea" 		javaType="String"/>
 	</resultMap>
	
	<select id="myPage" parameterType="String" resultMap="mypageMap" >	
	
		select textinput,textarea
		from tbl_mypage
		where fk_login_id =  #{userid}
			
	</select>
<!-- 내 페이지의 타이틀과 내용 가져오기 끝-->		
	

<!-- 내 페이지의 타이틀과 내용 변경하기  -->		
	<update id="updateMyPage" parameterType="HashMap">
		update tbl_mypage set textinput = #{textinput}, textarea = #{textarea}
		where fk_login_id = #{userid}
	</update>
<!-- 내 페이지의 타이틀과 내용 변경하기 끝  -->	


<!-- 내 페이지의 타이틀과 내용이 없으면 기본값으로 insert 하기 -->
	<insert id="insertMyPage" parameterType="HashMap">
		insert into tbl_mypage
  		values(#{userid},#{textinput},#{textarea})
	</insert>
<!-- 내 페이지의 타이틀과 내용이 없으면 기본값으로 insert 하기  끝 -->	
   
   
<!-- 나를 팔로우하는 사람들 ( 내 팔로워 ) 리스트 가져오기  -->   
    <resultMap type="HashMap" id="followerMap">
	 	<result property="login_name" 		 		column="login_name" 			javaType="String"/>
		<result property="uimg_profile_filename" 	column="uimg_profile_filename" 	javaType="String"/>
		<result property="fk_login_id" 			 	column="fk_login_id" 			javaType="String"/>
		
 	</resultMap>
 	
			
	<select id="myFollowerList" parameterType="String" resultMap="followerMap" >	
			
	    select L.login_name, nvl(U.uimg_profile_filename,'profile0.png') as uimg_profile_filename,F.fk_login_id
	    from tbl_follow F left join tbl_login L 
	    on F.fk_login_id = L.login_id
	    left join tbl_uimage U 
	    on F.fk_login_id = U.fk_login_id
	    where F.follow_id =  #{userid} and L.login_status  = 1

	</select>
<!-- 나를 팔로우하는 사람들 ( 내 팔로워 ) 리스트 가져오기  끝 -->



<!-- 내가 팔로우하는 사람들 ( 내 팔로잉 ) 리스트 가져오기  -->	
     <resultMap type="HashMap" id="followingMap">
     
	 	<result property="login_name" 		 		column="login_name" 			javaType="String"/>
		<result property="uimg_profile_filename" 	column="uimg_profile_filename" 	javaType="String"/>
		<result property="follow_id" 			 	column="follow_id" 			javaType="String"/>
		
 	</resultMap>
 	
			
	<select id="myFollowingList" parameterType="String" resultMap="followingMap" >	
			
	     select L.login_name, nvl(U.uimg_profile_filename,'profile0.png')as uimg_profile_filename,F.follow_id
   		 from tbl_follow F  join tbl_login L 
    	on F.follow_id = L.login_id
    	left join tbl_uimage U 
   	 	on F.follow_id = U.fk_login_id
   		where F.fk_login_id = #{userid} and L.login_status = 1
		
	</select>
	
<!-- 내가 팔로우하는 사람들 ( 내 팔로잉 ) 리스트 가져오기  끝 -->	


<!-- 내가 팔로우하는 사람들 ( 내 팔로잉 ) 이름리스트 가져오기   -->	
	<select id="getFollowingName" parameterType="String" resultType="String" >	
	    select L.login_name
	    from tbl_follow F join tbl_login L 
	    on F.follow_id = L.login_id
	    left join tbl_uimage U 
	    on F.follow_id = U.fk_login_id
	    where F.fk_login_id = #{loginId} and L.login_status = 1
	</select>
<!-- 내가 팔로우하는 사람들 ( 내 팔로잉 ) 이름리스트 가져오기  끝 -->


<!-- 나를 팔로우하는 사람들 ( 내 팔로워 ) 명수 가져오기   -->	
	<select id="getmyFollowerCnt" parameterType="String" resultType="int" >	
	    select count(*) as cnt
	    from tbl_follow 
	    where follow_id = #{userid}
	</select>
<!-- 나를 팔로우하는 사람들 ( 내 팔로워 ) 명수  가져오기  끝 -->	
	
	
	
<!-- 내가 팔로우하는 사람들 ( 내 팔로잉 ) 명수 가져오기  -->	
	<select id="getmyFollowingCnt" parameterType="String" resultType="int"  >	
		select count(*) as cnt
	    from tbl_follow 
	    where fk_login_id = #{userid}
    </select>
<!-- 내가 팔로우하는 사람들 ( 내 팔로잉 ) 명수 가져오기  끝 -->		
	
	
	
<!-- 내 페이지 배경사진 변경하기   -->	
    <update id="updateMyBg" parameterType="HashMap">
		update tbl_uimage set uimg_header_filename = #{newFileName}, uimg_header_orgfilename = #{originalFilename},uimg_header_filesize=#{fileSize}
		where fk_login_id = #{userid}
	</update>
<!-- 내 페이지 배경사진 변경하기  끝  -->


<!-- 내 페이지 프로필사진 변경하기   -->			
	 <update id="updateMyPf" parameterType="HashMap">
		update tbl_uimage set uimg_profile_filename = #{newFileName}, uimg_profile_orgfilename = #{originalFilename},uimg_profile_filesize=#{fileSize}
		where fk_login_id = #{userid}
	</update>
<!-- 내 페이지 프로필사진 변경하기  끝 -->	
    
    
<!-- 내 알람리스트 가져오기  -->
	<resultMap type="HashMap" id="alarmMap">
		<result property="fk_seq_tbl_board"  column="fk_seq_tbl_board" 	javaType="String"/>
		<result property="fk_follow_seq" 	 column="fk_follow_seq" 	javaType="String"/>
		<result property="fk_seq_tbl_q"		 column="fk_seq_tbl_q" 		javaType="String"/>
		<result property="fk_seq_tbl_music"  column="fk_seq_tbl_music" 	javaType="String"/>
		<result property="fk_seq_tbl_msg" 	 column="fk_seq_tbl_msg" 	javaType="String"/>
		<result property="fk_login_id" 		 column="fk_login_id" 		javaType="String"/>
		<result property="alarm_userid" 	 column="alarm_userid" 		javaType="String"/>
		<result property="alarm_type" 		 column="alarm_type" 		javaType="String"/>
		<result property="alarm_status" 	 column="alarm_status" 		javaType="String"/>
		<result property="alarm_time" 		 column="alarm_time" 		javaType="String"/>
	</resultMap>
 	
			
	<select id="myAlarmList" parameterType="String" resultMap="alarmMap" >		
		
		select nvl(fk_seq_tbl_board,0) as fk_seq_tbl_board , 
		       nvl(fk_follow_seq,0) as fk_follow_seq,
		       nvl(fk_seq_tbl_q,0) as fk_seq_tbl_q,
		       nvl(fk_seq_tbl_music,0) as fk_seq_tbl_music,
		       nvl(fk_seq_tbl_msg,0) as fk_seq_tbl_msg,
		       fk_login_id,alarm_userid,
		       alarm_type,
		       alarm_status,
		       to_char(alarm_time,'yyyy-mm-dd hh24:mi:ss')as alarm_time
		from tbl_alarm
		where alarm_userid = #{userid}
		order by alarm_time desc
		
	</select>

<!-- 내 알람 리스트 가져오기 끝 -->	
	
    
    
    

</mapper>